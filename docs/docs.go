// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Hadekha Erfadila Fitra",
            "email": "hdkef11@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/articles": {
            "get": {
                "description": "get all articles navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "get all articles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the last article in recent array of article",
                        "name": "last-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "how many article you want to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagmodel.GetArticle"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "create an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "create an article",
                "parameters": [
                    {
                        "description": "create an article",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputArticle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/articles/{id}": {
            "get": {
                "description": "get detail of article specified by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "get one article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.GetArticle"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "update an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "update an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update an article",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputArticle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "delete an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "delete an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/ch-pwd": {
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "send authorization header with password payload to change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "change user password",
                "parameters": [
                    {
                        "description": "change password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.ChPwd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/comments/{article-id}": {
            "get": {
                "description": "get all comments navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "get all comments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "article-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last comment in recent array of comment",
                        "name": "last-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "how many comment you want to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagmodel.GetComment"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "create an comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "create an comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "article-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create an comment",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "put": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "update an comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "update an comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of comment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update an comment",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "delete an comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "delete an comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of comment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/drafts": {
            "get": {
                "description": "get all drafts navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drafts"
                ],
                "summary": "get all drafts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the last draft in recent array of draft",
                        "name": "last-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "how many draft you want to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagmodel.GetDraft"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "create an draft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drafts"
                ],
                "summary": "create an draft",
                "parameters": [
                    {
                        "description": "create an draft",
                        "name": "draft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputDraft"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/drafts/{id}": {
            "get": {
                "description": "get detail of draft specified by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drafts"
                ],
                "summary": "get one draft",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of draft",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.GetDraft"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "update an draft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drafts"
                ],
                "summary": "update an draft",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of draft",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update an draft",
                        "name": "draft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputDraft"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "delete an draft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drafts"
                ],
                "summary": "delete an draft",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of draft",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/inboxes/{id}": {
            "put": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "update an inbox",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inboxes"
                ],
                "summary": "update an inbox",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of inbox",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update an inbox",
                        "name": "inbox",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputInbox"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "delete an inbox",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inboxes"
                ],
                "summary": "delete an inbox",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of inbox",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/inboxes/{receiver-id}": {
            "get": {
                "description": "get all inboxes navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inboxes"
                ],
                "summary": "get all inboxes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of user / receiver",
                        "name": "receiver-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last inbox in recent array of inboxes",
                        "name": "last-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "how many inboxes you want to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagmodel.GetInbox"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "create an inbox",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inboxes"
                ],
                "summary": "create an inbox",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of user / receiver",
                        "name": "receiver-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create an inbox",
                        "name": "inbox",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputInbox"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "send username and password to get JWT Token via cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "send username and password to get JWT Token",
                "parameters": [
                    {
                        "description": "create an user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/media": {
            "get": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "get all media navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "get all media",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the last media in recent array of media",
                        "name": "last-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "how many media you want to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagmodel.GetMedia"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "create an media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "create an media",
                "parameters": [
                    {
                        "description": "create an media",
                        "name": "media",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/media/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "delete an media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "delete an media",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of media",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/ratings/{article-id}": {
            "get": {
                "description": "get all ratings navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "get all ratings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "article-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the last rating in recent array of rating",
                        "name": "last-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "how many rating you want to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagmodel.GetRating"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "create an rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "create an rating",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "article-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create an rating",
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputRating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/ratings/{article-id}/sum": {
            "get": {
                "description": "get summed ratings navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "get summed ratings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of article",
                        "name": "article-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.GetRatingSum"
                        }
                    }
                }
            }
        },
        "/ratings/{id}": {
            "put": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "update an rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "update an rating",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of rating",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update an rating",
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputRating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "delete an rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "delete an rating",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of rating",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "send username, password, bio, and avatar url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register a regular user",
                "parameters": [
                    {
                        "description": "create a regular user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "get all users navigated by last-id and limit.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the last user in recent array of user",
                        "name": "last-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "how many user you want to take",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagmodel.GetUser"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "create a user (BY SUPER-ADMIN)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "create a user (BY SUPER-ADMIN)",
                "parameters": [
                    {
                        "description": "create an user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "get detail of user specified by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get one user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.GetUser"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "update an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update an user, only super-admin can update role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update an user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/swagmodel.InputUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AuthToken": []
                    }
                ],
                "description": "delete an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "delete an user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.Response"
                        }
                    }
                }
            }
        },
        "/users/{id}/public": {
            "get": {
                "description": "get detail of user specified by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get one user public information (without password information)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagmodel.GetUserPublic"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "swagmodel.ChPwd": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "swagmodel.GetArticle": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "creatorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imageURL": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "swagmodel.GetComment": {
            "type": "object",
            "properties": {
                "articleID": {
                    "type": "integer"
                },
                "body": {
                    "type": "string"
                },
                "creatorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "swagmodel.GetDraft": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "creatorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imageURL": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "swagmodel.GetInbox": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "creatorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "receiverID": {
                    "type": "integer"
                }
            }
        },
        "swagmodel.GetMedia": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "creatorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "swagmodel.GetRating": {
            "type": "object",
            "properties": {
                "articleID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "star": {
                    "type": "integer"
                }
            }
        },
        "swagmodel.GetRatingSum": {
            "type": "object",
            "properties": {
                "articleID": {
                    "type": "integer"
                },
                "avgStar": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "swagmodel.GetUser": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "swagmodel.GetUserPublic": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "swagmodel.InputArticle": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "imageURL": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "swagmodel.InputComment": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                }
            }
        },
        "swagmodel.InputDraft": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "creatorID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imageURL": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "swagmodel.InputInbox": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                }
            }
        },
        "swagmodel.InputMedia": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "swagmodel.InputRating": {
            "type": "object",
            "properties": {
                "star": {
                    "type": "integer"
                }
            }
        },
        "swagmodel.InputUser": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "swagmodel.LoginPayload": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "swagmodel.Register": {
            "type": "object",
            "properties": {
                "avatarURL": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "swagmodel.Response": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "AuthToken": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Bloggo API",
	Description: "Bloggo is a REST Api for blogging",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
